testing <- subset(segmentationOriginal, Case=="Test")
head(training)
library(AppliedPredictiveModeling)
data(segmentationOriginal)
library(caret)
training <- subset(segmentationOriginal, Case=="Train")
testing <- subset(segmentationOriginal, Case=="Test")
testing$Case
set.seed(125)
fit1 <- train(Class ~., method="rpart", data=training)
print(fit1$finalModel)
library(rattle)
install.packages("rattle")
library(rattle)
library(rattle)
library(rattle)
fancyRpartPlot(fit1$finalModel)
library(pgmm)
data(olive)
olive = olive[,-1]
str(olive)
fit1 <- train(Area ~., method = "rpart", data = olive)
print(filt1$finalModel)
print(fit1$finalModel)
newdata = as.data.frame(t(colMeans(olive)))
predict (fit1, newdata=newdata)
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
set.seed(13234)
str(train)
str(trainSA)
fit1 <- train(chd ~ age + alcohol + obesity + tobacco + typea + ldl, method="glm", family="binomial", data=trainSA)
fit1 <- train(factor(chd) ~ age + alcohol + obesity + tobacco + typea + ldl, method="glm", family="binomial", data=trainSA)
fit1
summary(fit1)
missClass = function(values, prediction){sum(((prediction > 0.5) * 1) != values) / length(values)}
misClass(trainSA$chd, predict(fit1, newdata=trainSA))
missClass(trainSA$chd, predict(fit1, newdata=trainSA))
fit1 <- train(chd ~ age + alcohol + obesity + tobacco + typea + ldl, method="glm", family="binomial", data=trainSA)
missClass(trainSA$chd, predict(fit1, newdata=trainSA))
missClass(testSA$chd, predict(fit1, newdata=testSA))
library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
str(vowel.train)
vowel.train$y
factor(vowel.train$y)
str(vowel.train)
vowel.train$y <- as.factor
as.factor(vowel.train$y)
str(vowel.train)
vowel.train$y <- as.factor(vowel.train$y)
str(vowel.train)
vowel.test$y <- as.factor(vowel.test$y)
set.seed(33833)
fit1 <- train(y ~., method="RF", data=vowel.train)
fit1 <- train(y ~., method="rf", data=vowel.train)
varimp(fit1)
library(caret)
varlmp(fit1)
varImp(fit1)
library(randomForest)
fit1 <- randomForest(y ~., data=vowel.train)
varImp(fit1)
order(varImp(fit1), decreasing = T)
install_github('slidify', 'ramnathv')
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(datasets)
View(mtcars)
View(mtcars)
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
library(datasets)
mtcars$am <- factor(mtcars$am,labels=c("Auto","Manual"))
mtcars$am
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
library(datasets)
fit <- lm(mpg ~ cyl + wt + am , data = mtcars)
fit_coef <- coef(summary(fit))
fit_coef
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
library(datasets)
fit <- lm(mpg ~ cyl + wt + am , data = da1)
fit_coef <- coef(summary(fit))
fit <- lm(mpg ~ cyl + wt + am , data = mtcars)
fit_coef <- coef(summary(fit))
fit_coef
summary(fit)
View(summary(fit))
coef_summary <- data.frame (Estimate =numeric(0), Std Error=numeric(0) )
coef_summary <- data.frame (Estimate =numeric(0), Std Error=numeric(0) )
coef_summary <- data.frame (Estimate =numeric(0), Std_Error=numeric(0) )
coef_summary <- data.frame (Predictor = character(0), Estimate =numeric(0), Std_Error=numeric(0) )
coef_summary$Predictor <- c("Intercept", "cyl", "wt", "am")
coef_summary <- data.frame (Predictor = character, Estimate =numeric(0), Std_Error=numeric(0) )
coef_summary$Predictor <- c("Intercept", "cyl", "wt", "am")
coef_summary$Predictor
View(coef_summary)
coef_summary <- data.frame (Predictor = character(4), Estimate =numeric(0), Std_Error=numeric(0) )
coef_summary <- data.frame (Predictor = character(0), Estimate =numeric(0), Std_Error=numeric(0) )
View(coef_summary)
coef_summary$Predictor <- c("Intercept", "cyl", "wt", "am")
coef_summary$Predictor[]
coef_summary$Predictor[] <- c("Intercept", "cyl", "wt", "am")
coef_summary$Predictor[,Predictor] <- c("Intercept", "cyl", "wt", "am")
coef_summary <- data.frame ( Estimate =numeric(0), Std_Error=numeric(0) )
fit_coef
fit_coef <- coef(summary(fit))
View(fit_coef)
fit_coef$Predictor <- fit_coef$row.names
fit_coef$row.names
a <- cbind(Row.Names = rownames(fit_coef), fit_coef)
View(a)
a <- cbind(Preditors = rownames(fit_coef), fit_coef)
a
round(a,2)
a
round(a[,c("2","3","4")],2)
a[,c("2","3","4")
]
a[,2]
a[2,]
a[c("2","3","4",)
]
a[c("2","3","4"),]
a[c(2,3,4),]
round( a[c(2,3,4),], 2)
round(, a[c(2,3,4)], 2)
round( a[, c(2,3,4)], 2)
a[c(2,3,4),]
a[c(2,3),]
a[, c(2,3,4)]
round( a[, c(2,3,4)] ,2)
is.num <- sapply(a, is.numeric)
a[is.num] <- lapply(a[is.num], round, 2)
a
a <- cbind(Preditors = rownames(fit_coef), fit_coef)
a
a[is.num] <- lapply(a[is.num], round, 2)
a
View(a)
a <- cbind(Preditors = rownames(fit_coef), fit_coef)
View(a)
a[is.num] <- apply(a[is.num], round, 2)
a[is.num] <- round(a[is.num], 2)
a[is.num]
a <- cbind(Preditors = rownames(fit_coef), fit_coef)
View(a)
View(a)
class(a)
as.data.frame(a)
class(a)
a <- as.data.frame(as.table(a))
a[is.num] <- round(a[is.num], 2)
a
a <- cbind(Preditors = rownames(fit_coef), fit_coef)
a <- as.data.frame(as.table(a))
a
library(datasets)
calc <- function(dat1) {
mpg_min <- min(dat1$mpg)
mpg_mean <- mean(dat1$mpg)
mpg_max <- max(dat1$mpg)
}
calc(mtcars)
mpg_min <- min(dat1$mpg)
mpg_min <- min(mtcars$mpg)
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
library(datasets)
fit <- lm(mpg ~ cyl + wt + am , data = mtcars)
coef_fit <- coef(summary(fit))
view(coef_fit)
clas(coef_fit)
Class(coef_fit)
class(coef_fit)
coef_fit <- as.data.frame(as.table(coef_fit ))
View(coef_fit)
coef_fit <- coef(summary(fit))
coef_fit
View(coef_fit)
fit <- lm(mpg ~ cyl + wt + am , data = mtcars)
coef_fit <- coef(summary(fit))
coef_fit <- as.data.frame(as.table(coef_fit ))
coef_fit <- cbind(Predictors = rownames(coef_fit), coef_fit)
View(coef_fit)
fit <- lm(mpg ~ cyl + wt + am , data = mtcars)
coef_fit <- coef(summary(fit))
View(coef_fit)
coef_fit <- cbind(Predictors = rownames(coef_fit), coef_fit)
View(coef_fit)
class(coef_fit)
coef_fit <- as.data.frame(as.table(coef_fit ))
fit <- lm(mpg ~ cyl + wt + am , data = mtcars)
coef_fit <- coef(summary(fit))
coef_fit <- cbind(Predictors = rownames(coef_fit), coef_fit)
coef_fit <- as.data.frame(coef_fit )
class(coef_fit)
View(coef_fit)
View(coef_fit)
barplot(Estimate ~ Predictors, data = coef_fit, col = (c("green","yellow")), ylab = "Miles Per Gallon",
xlab = "Transmission Type (0=auto, 1=manual)",
main="Comparison of MPG of Automatic vs. Manual Transmission")
barplot(Estimate ~ Predictors, data = coef_fit, col = (c("green","yellow")), ylab = "Miles Per Gallon",
xlab = "Transmission Type (0=auto, 1=manual)",
main="Comparison of MPG of Automatic vs. Manual Transmission")
fit <- lm(mpg ~ cyl + wt + am , data = mtcars)
coef_fit <- coef(summary(fit))
coef_fit <- cbind(Predictors = rownames(coef_fit), coef_fit)
coef_fit <- as.data.frame(coef_fit )
ggplot(coef_fit, aes(Estimate, fill=Predictors)) + geom_bar(position="dodge")
ggplot(coef_fit, aes(x=Predictors, y=Estimate, fill=Predictors)) + geom_bar(position="dodge")
ggplot(coef_fit, aes(x=Predictors, y=Estimate, fill=Predictors, stat="identity")) + geom_bar(position="dodge")
ggplot(coef_fit, aes(x=Predictors, y=Estimate, fill=Predictors),stat="identity") + geom_bar(position="dodge")
o
library(ggplot2)
ggplot(coef_fit, aes(x=Predictors, y=Estimate, fill=Predictors),stat="identity") + geom_bar(position="dodge")
ggplot(coef_fit, aes(x=Predictors, y=Estimate, fill=Predictors,stat="identity")) + geom_bar(position="dodge")
ggplot(coef_fit, aes(x=Predictors, y=Estimate, fill=Predictors)) + geom_bar(position="dodge", stat="identity")
ggplot(coef_fit, aes(x=Predictors, y=round(Estimate,2), fill=Predictors)) + geom_bar(position="dodge", stat="identity")
coef_fit$Estimate <- as.numeric(coef_fit$Estimate)
ggplot(coef_fit, aes(x=Predictors, y=round(Estimate,2), fill=Predictors)) + geom_bar(position="dodge", stat="identity")
fit <- lm(mpg ~ cyl + wt + am , data = mtcars)
coef_fit <- coef(summary(fit))
coef_fit <- cbind(Predictors = rownames(coef_fit), coef_fit)
coef_fit <- as.data.frame(coef_fit )
coef_fit$Estimate <- as.numeric(coef_fit$Estimate)
coef_fit <- as.data.frame(coef_fit )
fit <- lm(mpg ~ cyl + wt + am , data = mtcars)
coef_fit <- coef(summary(fit))
coef_fit <- cbind(Predictors = rownames(coef_fit), coef_fit)
coef_fit <- as.data.frame(coef_fit )
ggplot(coef_fit, aes(x=Predictors, y=round(Estimate,2), fill=Predictors)) + geom_bar(position="dodge", stat="identity")
fit <- lm(mpg ~ cyl + wt + am , data = mtcars)
coef_fit <- coef(summary(fit))
coef_fit <- cbind(Predictors = rownames(coef_fit), coef_fit)
coef_fit <- as.data.frame(coef_fit )
ggplot(coef_fit, aes(x=Predictors, y=round(Estimate,2), fill=Predictors)) + geom_bar(position="dodge", stat="identity")
fit <- lm(mpg ~ cyl + wt + am , data = mtcars)
coef_fit <- coef(summary(fit))
coef_fit <- cbind(Predictors = rownames(coef_fit), coef_fit)
coef_fit <- as.data.frame(coef_fit )
#        coef_fit$Estimate <- as.numeric(coef_fit$Estimate)
ggplot(coef_fit, aes(x=Predictors, y=Estimate,2, fill=Predictors)) + geom_bar(position="dodge", stat="identity")
ggplot(coef_fit, aes(x=Predictors, y=Estimate,2, fill=am)) + geom_bar(position="dodge", stat="identity")
Predictors
ggplot(coef_fit, aes(x=Predictors, y=Estimate,2, fill=Predictors)) + geom_bar(position="dodge", stat="identity")
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
ggplot(coef_fit, aes(x=Predictors, y=Estimate, fill=Predictors)) + geom_bar(position="dodge", stat="identity")
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
View(mtcars)
a <- ddply(mtcars,~group,summarise,mean=mean(mpg))
library(ddply)
library(plyr)
a <- ddply(mtcars,~group,summarise,mean=mean(mpg))
a <- ddply(mtcars,~ c("cyl", "am", "gear"),summarise,mean=mean(mpg))
a
calc <- ddply(mtcars,~ c("cyl", "am", "gear"),summarise,mean=mean(mpg))
View(calc)
class(calc)
names(calc) <- c("Variable")
View(calc)
names(calc) <- c("Variable", "Mean")
ggplot(calc, aes(x=Variable, y=Mean, fill=Variable)) + geom_bar(position="dodge", stat="identity")
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
library(datasets)
fit <- lm(mpg ~ am , data = mtcars)
coef_fit <- coef(summary(fit))
coef_fit <- cbind(Predictors = rownames(coef_fit), coef_fit)
coef_fit <- as.data.frame(coef_fit )
View(coef_fit)
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
coef_fit$Estimate <- as.numeric(coef_fit$Estimate)
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
library(datasets)
mtcars
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
mtcars
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
View(coef_fit)
fit <- lm(mpg ~ am , data = mtcars)
coef_fit <- coef(summary(fit))
coef_fit <- cbind(Predictors = rownames(coef_fit), coef_fit)
coef_fit <- as.data.frame(coef_fit )
coef_fit$Estimate <- as.numeric(levels(coef_fit$Estimate))[coef_fit$Estimate]
View(coef_fit)
ggplot(coef_fit, aes(x=Predictors, y=Estimate, fill=Predictors))
estimate <- ggplot(coef_fit, aes(x=Predictors, y=Estimate, fill=Predictors))
estimate <- estimate + geom_bar(position="dodge", stat="identity")
estimate
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
library(markdown)
install.packages(markdown)
install.packages("markdown")
install.packages("markdown")
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
devtools::install_github('rstudio/rsconnect')
devtools::install_github('rstudio/rsconnect')
install.packages("digest")
devtools::install_github('rstudio/rsconnect')
rsconnect::setAccountInfo(name='king23', token='D71FC9EDB933A6AB447C88D4D8CA64A0', secret='n4NyUH2VwalsBxhofEGdUyoLqkwpg+hvnNZBM/eu')
shiny::runApp('Rtraining1/R_MDec/Module9/assignment')
install_github('slidify', 'ramnathv')
library(devtolls)
library(devtools)
install_github('slidify', 'ramnathv')
library(slidify)
slidify(index.rmd)
slidify('index.rmd')
setwd("C:/Users/wchin/Documents/Rtraining1/R_MDec/Module9/assignment/presentation")
slidify('index.rmd')
publish(title = 'DevDataProduct_Assignment', 'index.html', host = 'rpubs')
install.packages('digest')
install.packages("digest")
publish(title = 'DevDataProduct_Assignment', 'index.html', host = 'rpubs')
library(slidify)
publish(title = 'DevDataProduct_Assignment', 'index.html', host = 'rpubs')
